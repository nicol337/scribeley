Scribeley: A student made blogging site
Nicole Lee (nkL223@gmail.com, N14636427)

Overview: Scribeley allows users to have multiple blogs and multiple posts within blogs. They can create, edit, and publish to their own blogs and view others' blogs. 

Files:
	-app.yaml: necessary google app engine config file
	-blog_home_page.html: Jinja2 template for the home page of a blog, default view.
	-blog_post_page.html: Jinja2 template for the post view.
	-blog.py: python script, core of the application where urls are redirected, get and post request are handled, and where object classes lie.
	-documentation.txt: this file, which documents the application
	-home_page.html: Jinja2 template, landing page of scribeley
	-index.yaml: indexes for Blog and Blogpost queries
	-tag_search_page.html: Jinja2 template, for the tag search result page.
	-user_home_page.html: Jinja2 template, custome home page for a logged in user

Folders: 
	-bootstrap: Twitter Bootstrap library, for css styling and javascript responsive page enabling

Assumptions: titles of blogs and posts can be repeated. Tags are literal so spaces will create different tags.

-Navigation:
	Landing Page and User Home Page:
	Begin on the Scribeley home landing page and log in as a user. Once logged in, you are brougt to your personal home page which lists "Your Blogs" on the left navigation. An option in the center allows you to to create a new blog. Eventually it will populate on the left navigation under "Your Blogs". Clicking on one of your blogs brings you to that blog's home page.

	Blog Home Page:
	A blog's home page displays the first 10 posts (ordered by date) with an older posts button at the bottom to get to older posts. If the logged in user is the owner of this blog then there is a New Post form displayed that will only submit if the title and contents are non-empty. Tags are option. A blog's home page has the added navigation group of "Tags of <current blog>". This displays all the tags in the blogposts of the current blog you are viewing. 

	Tag Search Page:
	Clicking on one of these tag hyperlinks will lead you to a search page where all posts tagged with the tag from the current blog are displayed in groups of ten with an older posts button (if there are older posts to display).

	Blogpost Page:
	Clicking the "view more" button of a blogpost from the Tag Search Page or the Blog Home Page will lead you to that blogpost's page. If the logged user is the blog's author, then the user has the option to edit the content, title, and tags of the post. If the edit button is clicked, a form is displayed.

-Login/Logout
	Login and logout options on the top of the page which toggle depending on if you are logged in or out. Pages of blogs, searches, and blogposts are still viewable even if you are not the owner of the blog. In the case you are not the owner, certain forms (edit, create) are not offered.

-Creating
	As a user, you can create a new blog from the user home page or you can create a new blogpost from the blog home page.

-Editing
	As the owner of the blog you are currently viewing, you can edit the blogposts by going through the view more -> edit options and submitted the changes

-Viewing
	You can view all blogs, blogposts, and tag search pages for a blog if you are the owner or not. The user home pages are only shown to the current user.

Model Classes Architecture:
-A user can have many blogs and which can have many posts. The relation between a user and ablog uses a user references to connect a blog to the author. The relation between a blog and its blog posts uses a string reference to the blog's name.

-db.Model classes:
	-Blog
		-properties:
			-author: points to a user, used for queries and to check if the logged in user should have certain accesses
			-title: required and entered by user
	-Blogpost
		-properties:
			-author: points to a user, used for queries and to check if the logged in user should have certain accesses
			-title: required and entered by user, can edit by the author
			-content: required, entered by user, can edit by the author
			-tags: entered by user, can be editted by the author
			-blog: required, references the parent blog that this post belongs to
			-date: automatically created when the blogpost is first publshed, final and cannot be changed.
		-methods:
			update: updates the content, tags, and title which refers to the blogpost edit form that appears on a post page if the user is the blog's owner and chooses to edit.

Request Handler Classes Architecture:
-Navigation is done with the help of urls. All urls are permalinks and will be fed to the correct request handler depending on the application definitions in the blog.py file.

	-HomePage ('/', HomePage)
		-uses home_page.html template
		-get: basic landing page loads for all viewers

	-UserHome (r'/user/', UserHome)
		-uses user_home_page.html template
		-post: post request submitted by the create a new blog form on this page. redirects to the new blog's home page.
		-get: user's home page with their blogs displayed and the create a new blog option
	
	-BlogHome (r'/blog/(.*)/(.*)', BlogHome)
		-uses blog_home_page.html
		-post: post request submitted by the create a new post form on this page. redirects to the same page with the updated lists of posts (new post is displayed as the first post under "Previous Posts")
		-get: blog's home page with previous posts displayed

	-BlogpostPage

    -(r'/post/(.*)/(.*)/(.*)', BlogpostPage),
    -(r'/search/(.*)/(.*)/(.*)', TagSearchPage)


Third Party Packages:
-Jinja2
	Used for creating the following templates:
	-blog_post_page.html
	-tag_search_page.html
	-blog_home_page.html
	-user_home_page.html
	-home_page.html
-Twitter Bootstrap
	A css and responsive javascripting website that does superficial mark-up. The css stylesheet (bootstrap.css) is linked in in the head of an html document. The stylesheets are located in the bootstrap/css folder. I use it to style the following Jinja2 templates:
	-blog_post_page.html
	-tag_search_page.html
	-blog_home_page.html
	-user_home_page.html
	-home_page.html

-Requirements
1. Can handle multiple users that log in and each user has the ability to add new blogs to their own group of blogs (see /blog/<blogname>/ )

2. Each blog can only be added to/edited by the owner of the blog. Users can choose a blog from the "Your Blogs" navigation bar on the left and go to the blog's home page. Edit a blog post by clicking view more on that post then clicking edit.

3. See blog's home page for the posts in chronological order. If there are more posts to display than fit on the page, there will be an older posts button on the bottom of the page.

4. Blog contents are capped at 500 character. The post can be viewed on a separate page by clicking on the view more option

5. Blogposts can be edited if the logged in user is the owner of the blog. The edit time is not recorded (the original creation time is permanent). Edit the blog by navigating: blog home page -> blog post's view more option -> edit (fill out form and submit). The form present after clicking edit is filled in with the original title, contents, and tags of the blog.

6. The owner of the blog can add tags to a blogpost when the post is first created or can add them after by editing the post

7. Clicking on a tag listed in the bottom of a blogpost or by clicking on a tag from the left navigation bar will lead to a search of the blog for all posts tagged with that string.

8. 

9. Unimplemented
 
10. Unimplemented

Branch. 